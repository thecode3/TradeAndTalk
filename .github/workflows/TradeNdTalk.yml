# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          - name: actions.mini-program
          - name: actions.mini-program
          - name: actions.mini-program
          - name: actions.mini-program
  # You may pin to the exact commit or the version.
  # uses: echoings/actions.mini-program@4170ef5d752c95a2651e00e3ff649e7f4b95cb6c
  uses: echoings/actions.mini-program@0.0.3
  with:
    # project type (miniProgram/miniProgramPlugin/miniGame/miniGamePlugin)
    project_type: # default is miniProgram
    # upload action type  (preview/upload/pack-npm/pack-npm-manually/cloud/)
    action_type: # optional, default is preview
    # where the file project.config.json at
    project_path: # optional, default is 
    # pub version
    version: # optional, default is 0.0.1
    # upload version's remark
    remark: # optional
    # in case void miniprogram-cli upgrade to change it's command structure, can use this as subcommand values are separated with whitespace
    subcommand: # optional
    # compile options
    command_options: # optional, default is --enable-es6 --project-ignores=['node_modules/**/*']
    - name: Alpine Probe & Echo
  # You may pin to the exact commit or the version.
  # uses: Kaizhe/alpine-echo@20717ab890dd2c02b1fbdaabbeccec14a6df9c79
  uses: Kaizhe/alpine-echo@v1.0.0
  with:
    # Echo Message
    message: # default is Hello World
    - name: DIY actions
  # You may pin to the exact commit or the version.
  # uses: echoings/actions.diy@42a626ae4641f2c1400ddb6e4323204f5e4cdc3e
  uses: echoings/actions.diy@v0.1.0
  - name: sambaiz-test-docker-github-action
  # You may pin to the exact commit or the version.
  # uses: sambaiz/test-docker-github-action@5f162118833bef10815981309e18eb5a8903ea8c
  uses: sambaiz/test-docker-github-action@v1.0.1
  with:
    # What do you say?
    i-say: # default is {}
